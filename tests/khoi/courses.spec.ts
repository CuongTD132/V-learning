import test, { expect } from "@playwright/test";
import { CoursesPage } from "../../pages/CoursesPage";
import { log } from "console";

test.describe("Courses Page", () => {

    let coursesPage: CoursesPage;

    test.setTimeout(300000); // TƒÉng th·ªùi gian ch·ªù cho to√†n b·ªô m√¥ t·∫£

    test.beforeEach(async ({ page }) => {
        coursesPage = new CoursesPage(page);
        await coursesPage.goToCoursesPage();
    });

    test("Ki·ªÉm tra chuy·ªÉn trang khi click v√†o c√°c Kh√≥a h·ªçc", async () => {
        let hasNextPage = true;
        let totalCoursesChecked = 0;
        let currentPageNum = await coursesPage.getCurrentPageNumber();

        while (hasNextPage) {
            console.log(`\nüìÑ ƒêang ki·ªÉm tra trang ${currentPageNum}`);

            // L∆∞u l·∫°i s·ªë trang hi·ªán t·∫°i ƒë·ªÉ quay v·ªÅ sau khi ki·ªÉm tra chi ti·∫øt kh√≥a h·ªçc
            const savedPageNum = await coursesPage.getCurrentPageNumber();

            // L·∫•y s·ªë l∆∞·ª£ng kh√≥a h·ªçc trong trang hi·ªán t·∫°i
            const courseCount = await coursesPage.getCourseCount();
            console.log(`   T√¨m th·∫•y ${courseCount} kh√≥a h·ªçc`);

            // Ki·ªÉm tra kh√≥a h·ªçc
            for (let j = 0; j < courseCount; j++) {
                console.log(`   ‚úì Ki·ªÉm tra kh√≥a h·ªçc ${j + 1}/${courseCount}`);

                await coursesPage.clickCourseByIndex(j);

                // Ki·ªÉm tra URL c√≥ chuy·ªÉn ƒë·∫øn trang chi ti·∫øt kh√¥ng
                await expect(coursesPage.page).toHaveURL(/.*\/chitiet/);

                const url = coursesPage.page.url();
                const courseId = url.split("/chitiet/")[1]?.split("/")[0];
                log(`      - ID kh√≥a h·ªçc: ${courseId}`);

                await coursesPage.goBackToCoursesAndReturnToPage(savedPageNum);

                totalCoursesChecked++;
            }

            // Chuy·ªÉn sang trang ti·∫øp theo
            console.log(`   ƒêang chuy·ªÉn sang trang ${currentPageNum + 1}...`);
            hasNextPage = await coursesPage.clickNextPage();

            if (hasNextPage) {
                currentPageNum = await coursesPage.getCurrentPageNumber();
            } else {
                console.log(`\n‚úÖ ƒê√£ ki·ªÉm tra xong t·∫•t c·∫£ ${currentPageNum} trang`);
                console.log(`üìä T·ªïng s·ªë kh√≥a h·ªçc ƒë√£ ki·ªÉm tra: ${totalCoursesChecked}`);
            }
        }

        // ƒê·∫£m b·∫£o ƒë√£ ki·ªÉm tra √≠t nh·∫•t 1 kh√≥a h·ªçc
        expect(totalCoursesChecked).toBeGreaterThan(0);
    });
});